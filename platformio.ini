#
# PlatformIO Configuration File
#
# For detailed documentation with EXAMPLES:
#
# https://docs.platformio.org/en/latest/projectconf/index.html
#
#
# By default platformio build will abort after 5 errors.
# Remove '-fmax-errors=5' from build_flags below to see all.
#
[platformio]
src_dir         = .
;for Demo
;build_dir       = Demo_Build
;for BlinkingLight
;build_dir       = BlinkingLight_Build
;for Blinking_Light2
;build_dir       = Blinking_Light2_Build
;for Blinking_Light3
;build_dir       = Blinking_Light3_Build
;for Button_Light
build_dir       = Button_Light_Build
libdeps_dir     = .pio
;f100rb ia a medium-density value line for f100xx MCU use to run code
default_envs    = disco_f100rb

[common]
; for Linux and Windows:
lib_deps  =
    STM32F10x_StdPeriph_Lib_V3.5.0_mod = https://github.com/GadgetAngel/STM32F10x_StdPeriph_Lib_V3.5.0_mod.git
lib_ignore =
    STM32F10x_StdPeriph_Lib_V3.5.0_mod
default_src_filter  =
    +<*>
    +<.pio/disco_f100rb/STM32F10x_StdPeriph_Lib_V3.5.0_mod>
    +<.pio/disco_f100rb/STM32F10x_StdPeriph_Lib_V3.5.0_mod/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x>
    ; place a "+" (plus) sign in front of next statement to enable the STM32 Std Peripheral Library or place a "-" (minux) sign in front to disable the STM32 Std Peripheral Library
    -<.pio/disco_f100rb/STM32F10x_StdPeriph_Lib_V3.5.0_mod/Libraries/STM32F10x_StdPeriph_Driver>
    -<include> -<Library>
    -<.pio/disco_f100rb/STM32F10x_StdPeriph_Lib_V3.5.0_mod/Libraries/CMSIS/CM3/CoreSupport>
    -<Demo>
    -<BlinkingLight>
    -<Blinking_Light2>
    -<Blinking_Light3>
    +<Button_Light>
;
; For Both Linux and Windows 10:
build_flags =
    -fmax-errors=5
    -O1
    ; the next statement are automatically added by Platformio via "../.platformio/platforms/ststm32/boards/disco_f100rb.json" file
    ;;-mcpu=cortex-m3 -mthumb
    ;
    ; for BOTH Linux and Windows 10:
    -DSTM32F10X_MD_VL
    -DUSE_STDPERIPH_DRIVER
    -DUSE_FULL_ASSERT
    ;
    ;for Both Windows and Linux:
    ; for other modules that might need to be accessed later:
    ;-I"Library/ff9/src"
    ; for other modules that might need to be accessed later:
    ;-I"Library"
    ;
    ; for BOTH Linux and Windows 10:
[env:disco_f100rb]
platform                = ststm32
board                   = disco_f100rb
framework               = cmsis
board_build.mcu         = stm32f100rbt6
lib_ldf_mode            = off
lib_compat_mode         = off
;This projects link script file (.ld) for STM32F100RBT6
board_build.ldscript    = "STM32F100RBHX_FLASH_MOD.ld"

build_flags             = ${common.build_flags}
src_filter              = ${common.default_src_filter}
lib_deps                = ${common.lib_deps}

upload_protocol         = custom

;For Windows and Linux using stlink V1.6.0:
upload_command          = st-flash write $SOURCE 0x08000000

;Debug setup
debug_tool              = stlink
;https://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html for gcc options
debug_build_flags       = -fmax-errors=5 -DSTM32F10X_MD_VL -DUSE_STDPERIPH_DRIVER -DUSE_FULL_ASSERT -O0 -g3 -ggdb3
debug_init_break        = break main.c:71 if button_value = 1
debug_port              = localhost:3333
debug_load_mode         = always
debug_load_cmds         = load
debug_init_cmds =
  target extended-remote $DEBUG_PORT
  $INIT_BREAK
  monitor reset halt
  $LOAD_CMDS
  monitor init
  monitor reset halt
  interrupt
  continue